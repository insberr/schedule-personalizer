const noadv=[{p:"zero",time:"6:35 - 7:30"},{p:"1",time:"7:35 - 8:45"},{p:"2",time:"8:50 - 9:55"},{p:"lnc",time:"9:55 - 10:25",l:"1"},{p:"3",time:"10:30 - 11:40",l:"1"},{p:"3",time:"10:00 - 10:30",l:"2"},{p:"lnc",time:"10:30 - 11:00",l:"2"},{p:"3",time:"11:05 - 11:40",l:"2"},{p:"3",time:"10:00 - 11:10",l:"3"},{p:"lnc",time:"11:10 - 11:40",l:"3"},{p:"4",time:"11:45 - 12:55"},{p:"5",time:"1:00 - 2:05"},{p:"dism",time:"2:05 - 2:10"}],adv=[{p:"zero",time:"6:35 - 7:30"},{p:"adv",time:"7:35 - 8:05"},{p:"1",time:"8:10 - 9:05"},{p:"2",time:"9:10 - 10:10"},{p:"lnc",time:"10:10 - 10:40",l:"1"},{p:"3",time:"10:45 - 11:55",l:"1"},{p:"3",time:"10:15 - 10:45",l:"2"},{p:"lnc",time:"10:45 - 11:15",l:"2"},{p:"3",time:"11:20 - 11:55",l:"2"},{p:"3",time:"10:15 - 11:25",l:"3"},{p:"lnc",time:"11:25 - 11:55",l:"3"},{p:"4",time:"12:00 - 1:00"},{p:"5",time:"1:05 - 2:05"},{p:"dism",time:"2:05 - 2:10"}],end=[{we:!0}];function toTitleCase(text){if("string"!=typeof text)return text;{let newText;return text.replace(/\w\S*/g,(function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()})).replace("Ela","ELA").replace("Us","US")}}const main=Vue.createApp({data:()=>({setup:{init:!0,step:1,importMethod:"a",studentVue:{username:"",password:"",name:"",permID:0},loggingIn:!1,loginError:""},full:!1,day:(new Date).getDay(),configMenuOpen:!1,hide:!0,lunch:"1",cohort:"normal",zooms:{p1:"",p2:"",p3:"",p4:"",p5:"",padv:"",pzero:""},classes:{p1:"",p2:"",p3:"",p4:"",p5:"",padv:"Advisory",plnc:"Lunch",parr:"Arrival",pdism:"Dismissal",pstudy:"Study",ppass:"Passing",pzero:"0 Hour"},rooms:{p1:"",p2:"",p3:"",p4:"",p5:"",padv:"",pzero:""},schedule:{normal:[end,noadv,adv,noadv,adv,noadv,end]}}),created(){let data=JSON.parse(localStorage.getItem("data"));data&&(this.classes=data.classes||this.classes,this.cohort=data.cohort||this.cohort,this.lunch=data.lunch||this.lunch,this.zooms=data.zooms||this.zooms,this.hide=void 0!==data.hide?data.hide:this.hide,this.full=data.full||this.full,this.rooms=data.rooms||this.rooms,this.setup.init=void 0!==data.init?data.init:this.setup.init,this.setup.studentVue.password=data.password||"",this.setup.studentVue.username=data.username||""),this.save()},mounted(){this.$nextTick((function(){document.getElementById("loading").className="d-none"}))},methods:{save(){let data_new={init:this.setup.init,classes:this.classes,cohort:this.cohort,lunch:this.lunch,zooms:this.zooms,hide:this.hide,full:this.full,rooms:this.rooms,password:this.setup.studentVue.password,username:this.setup.studentVue.username};localStorage.setItem("data",JSON.stringify(data_new))},going(){if("t"===this.cohort)return!0;if(this.full)return!1;if(3===this.day)return!1;if("a"===this.cohort){if(1===this.day)return!0;if(2===this.day)return!1;if(4===this.day)return!0;if(5===this.day)return!1}return 1!==this.day&&(2===this.day||4!==this.day&&(5===this.day||0!==this.day&&6!==this.day&&void 0))},dayName(){var days;return["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][this.day]},goes(day){},perName(per){let pd=this.classes["p"+per.p];return"arr"===per.p&&this.full?"Study":"dism"===per.p&&this.full?"Study":""===pd?"Period "+per.p:pd},configMenu(){this.configMenuOpen=!this.configMenuOpen},studentVueLogin(){console.log("logging in"),this.setup.loggingIn=!0,fetch("https://bhsdb.wackery.com/api/validate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:this.setup.studentVue.username,password:this.setup.studentVue.password})}).then(res=>res.json()).then(json=>{console.log(json),"ERROR"==json.code?(console.error("ERROR FROM API! "+json.content.error),main.setup.loginError=json.content.error,main.setup.loggingIn=!1):(""!==main.setup.loginError&&(main.setup.loginError=""),fetch("https://bhsdb.wackery.com/api/get_student_info",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:this.setup.studentVue.username,password:this.setup.studentVue.password})}).then(res=>res.json()).then(json=>{main.setup.studentVue.name=json.content.FormattedName,main.setup.studentVue.permID=json.content.PermID,console.log("student_info:"),console.log(json),main.setup.step++}),fetch("https://bhsdb.wackery.com/api/get_schedule",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:this.setup.studentVue.username,password:this.setup.studentVue.password})}).then(res=>res.json()).then(json=>{for(let classPD of json.content.ClassLists.ClassListing)8!==classPD.Period?(main.classes["p"+classPD.Period]=toTitleCase(classPD.CourseTitle),main.rooms["p"+classPD.Period]=toTitleCase(classPD.RoomName)):main.rooms.padv=toTitleCase(classPD.RoomName);main.save(),console.log("schedule t1:"),console.log(json)}))})},setupDone(){this.setup.init=!1,this.save(),this.resetSetup()},resetSetup(){this.setup.step=1,this.setup.importMethod="a",this.setup.loggingIn=!1},resetSite(){localStorage.setItem("data","{}"),location.reload()}},watch:{lunch(){this.save()},cohort(){this.save()},hide(){this.save()},full(){this.save()}},computed:{isPWA:function(){return isPWA()},isInstalled:function(){return null!==localStorage.getItem("installed")&&"true"===localStorage.getItem("installed")}}}).mount("#main");function visibilityListener(){switch(document.visibilityState){case"hidden":break;case"visible":main.day=(new Date).getDay(),main.configMenuOpen=!1}}function getPWADisplayMode(){const isStandalone=window.matchMedia("(display-mode: standalone)").matches;return document.referrer.startsWith("android-app://")?"twa":navigator.standalone||isStandalone?"standalone":"browser"}function isPWA(){return"browser"!=getPWADisplayMode()}main.config.errorHandler=(err,vm,info)=>{JSON.parse(localStorage.getItem("data"))!=={}&&(localStorage.setItem("data","{ }"),location.reload()),console.log(err+vm+info)},document.addEventListener("visibilitychange",visibilityListener);var popoverTriggerList=[].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]')),popoverList=popoverTriggerList.map((function(popoverTriggerEl){return new bootstrap.Popover(popoverTriggerEl)})),buttonInstall=document.getElementById("installbutton");function init_ServiceWorker(){"serviceWorker"in navigator&&window.addEventListener("load",(function(){navigator.serviceWorker.register("/schedule-personalizer/sw.js").then((function(registration){console.log("ServiceWorker registration successful with scope: ",registration.scope)}),(function(err){console.log("ServiceWorker registration failed: ",err)}))}))}window.addEventListener("load",(function(){isPWA()&&localStorage.setItem("installed",!0)})),window.addEventListener("appinstalled",()=>{document.getElementById("howtomakeapp").style.display="none",localStorage.setItem("installed","true"),location.reload(),console.log("PWA was installed")}),init_ServiceWorker();